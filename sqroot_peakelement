{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMsNGnx/drhqulm9Nl3/roC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U8wYdCtoUSvB","executionInfo":{"status":"ok","timestamp":1675747254832,"user_tz":-330,"elapsed":7,"user":{"displayName":"VUNDAVALLI RAGHAVA (RA2111047010146)","userId":"11878556250651125271"}},"outputId":"a42d0082-f533-4a5a-c009-962e541104c9"},"outputs":[{"output_type":"stream","name":"stdout","text":["Peak Element: 20\n","Square Root of Peak Element: 4.47213595499958\n"]}],"source":["import math\n","\n","def findPeakElement(arr):\n","    low = 0\n","    high = len(arr) - 1\n","    \n","    while low <= high:\n","        mid = (low + high) // 2\n","        if (mid == 0 or arr[mid - 1] <= arr[mid]) and (mid == len(arr) - 1 or arr[mid + 1] <= arr[mid]):\n","            return arr[mid]\n","        elif mid > 0 and arr[mid - 1] > arr[mid]:\n","            high = mid - 1\n","        else:\n","            low = mid + 1\n","    return -1\n","\n","def findSquareRoot(peak):\n","    return math.sqrt(peak)\n","\n","arr = [1, 3, 20, 4, 1, 0]\n","peak = findPeakElement(arr)\n","square_root = findSquareRoot(peak)\n","print(\"Peak Element:\", peak)\n","print(\"Square Root of Peak Element:\", square_root)\n"]}]}